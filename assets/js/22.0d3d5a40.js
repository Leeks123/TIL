(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{371:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"변수할당으로-의도를-표현하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변수할당으로-의도를-표현하라"}},[t._v("#")]),t._v(" 변수할당으로 의도를 표현하라")]),t._v(" "),a("h2",{attrs:{id:"const로-변하지-않는-값을-표현하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const로-변하지-않는-값을-표현하라"}},[t._v("#")]),t._v(" const로 변하지 않는 값을 표현하라")]),t._v(" "),a("p",[t._v("const는 블록의 문맥 내에서 재할당할 수 없는 선언")]),t._v(" "),a("p",[t._v("const에 배열, 객체, 컬렉션 형태를 할당하는 경우에는 바뀔 수 있음. 그러니 까다롭게 봐야하고 되도록이면 조작을 피하는 것이 최선")]),t._v(" "),a("p",[t._v("일단은 const를 기본으로 사용. 코드가 변경되어 더 이상 적절하지 않을 때 다른 선언으로 변경해서 사용할 것")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"let과-const로-유효범위-충돌을-줄여라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let과-const로-유효범위-충돌을-줄여라"}},[t._v("#")]),t._v(" let과 const로 유효범위 충돌을 줄여라")]),t._v(" "),a("p",[t._v("let은 재할당이 가능한 점에서 var와 유사")]),t._v(" "),a("p",[t._v("var는 어휘적 유효범위(lexical scope), let은 블록 유효범위(block scope), const도 블록 유효범위")]),t._v(" "),a("p",[t._v("let과 const는 같은 이름의 변수를 다시 선언할 수 없다.")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"블록-유효-범위-변수로-정보를-격리하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#블록-유효-범위-변수로-정보를-격리하라"}},[t._v("#")]),t._v(" 블록 유효 범위 변수로 정보를 격리하라")]),t._v(" "),a("blockquote",[a("h5",{attrs:{id:"호이스팅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#호이스팅"}},[t._v("#")]),t._v(" 호이스팅")]),t._v(" "),a("p",[t._v("자바스크립트에서는 함수나 변수를 작성하기 전에도 사용이 가능하다.\n이는 자바스크립트에서 컨텍스트 실행이 작동하는 방식 때문.")]),t._v(" "),a("p",[t._v("변수는 선언하기 전에 초기화하여 사용될 수 있음. 그러나 초기화 없이는 사용 불가\n초기화가 아니 선언만 끌어올림. 만약 변수를 선언한 뒤 나중에 초기화 시켜 사용한다면, 그 값은 undefined")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Glossary/Hoisting",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hoisting"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("for나 if문에 사용하는 변수는 var보다는 let을 사용할 것. let을 이용하면 for문이 반복될 때마다 값을 잠금")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"템플릿-리터럴로-변수를-읽을-수-있는-문자열로-변환하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿-리터럴로-변수를-읽을-수-있는-문자열로-변환하라"}},[t._v("#")]),t._v(" 템플릿 리터럴로 변수를 읽을 수 있는 문자열로 변환하라")]),t._v(" "),a("p",[t._v("템플릿 리터럴은 백틱( ` )을 사용한다")]),t._v(" "),a("p",[t._v("변수에 할당한 문자열처럼 단순 문자열이 아니라면 특별한 지정자( "),a("code",[t._v("${ 변수 }")]),t._v(" )로 감싸야 한다")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'john'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi, "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hi, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hi, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("변수 뿐만 아니라 메서드 호출도 가능하다. 그러나 가능하면 중괄호 내부에서 많은 것을 하지 않는 것이 좋다.")]),t._v(" "),a("p",[t._v("예전 방법이 나은 경우는 추가정보가 없는 두 변수를 연결하는 경우 뿐이다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);