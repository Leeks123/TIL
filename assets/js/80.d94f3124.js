(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{428:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"hashes-and-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashes-and-symbols"}},[s._v("#")]),s._v(" Hashes and Symbols")]),s._v(" "),a("h2",{attrs:{id:"nil"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nil"}},[s._v("#")]),s._v(" Nil")]),s._v(" "),a("p",[a("code",[s._v("nil")]),s._v(" 은 루비에서의 non-true 값들 중 하나이다. 그러나 "),a("code",[s._v("false")]),s._v(" 와는 다르다")]),s._v(" "),a("p",[a("code",[s._v("false")]),s._v(" 는 "),a("strong",[s._v("not true")]),s._v(". "),a("code",[s._v("nil")]),s._v(" 은 "),a("strong",[s._v("nothing at all")])]),s._v(" "),a("h2",{attrs:{id:"symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[s._v("#")]),s._v(" Symbol")]),s._v(" "),a("p",[s._v("심볼은 변수이름앞에 "),a("code",[s._v(":")]),s._v(" 를 붙인다.")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("puts "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("object_id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 9417160")]),s._v("\nputs "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("object_id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 9416900")]),s._v("\n\nputs "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("object_id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 802268")]),s._v("\nputs "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("object_id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 802268")]),s._v("\n")])])]),a("p",[s._v("문자열은 하나의 값(Object_id)으로 여러 문자열을 가질 수 있지만, 심볼은 오직 하나의 값만 가진다")]),s._v(" "),a("p",[s._v("심볼은 해시의 키 혹은 참조메서드 이름으로 주로 쓰인다")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("sounds "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"meow"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":dog")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"woof"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":computer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10010110")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("해시의 키로 심볼이 쓰이면 좋은 점은")]),s._v(" "),a("ol",[a("li",[s._v("불변성. 한번 생성되면 바뀌지 않음")]),s._v(" "),a("li",[s._v("심볼은 오직 하나의 값만 가지기 때문에 메모리 낭비가 없음")]),s._v(" "),a("li",[s._v("문자열을 키로 쓰는 것보다 빠르다")])]),s._v(" "),a("h3",{attrs:{id:"symbol-↔️-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-↔️-string"}},[s._v("#")]),s._v(" Symbol ↔️ String")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":sasquatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("to_s\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ==> "sasquatch"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sasquatch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("to_sym\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> :sasquatch")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sasquatch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("intern\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> :sasquatch")]),s._v("\n")])])]),a("h3",{attrs:{id:"hash-rocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash-rocket"}},[s._v("#")]),s._v(" Hash Rocket")]),s._v(" "),a("p",[s._v("해시의 기존 로켓 문법은 ruby 1.9. 부터 바뀌었다")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("new_hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  three"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("strong",[s._v("symbol")]),s._v(" 의 "),a("code",[s._v(":")]),s._v(" 는 이름 뒤에 붙인다")]),s._v(" "),a("li",[a("code",[s._v("=>")]),s._v(" 은 생략 한다")])]),s._v(" "),a("p",[s._v("자바스크립트의 객체와 유사하게 변했다. 편안..")]),s._v(" "),a("h3",{attrs:{id:"select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[s._v("#")]),s._v(" .select")]),s._v(" "),a("p",[s._v("hash에서 값들을 필터링하는 방법은 "),a("code",[s._v(".select")])]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("grades "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  alice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  bob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("92")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  chris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("95")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  dave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("97")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ngrades"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("select "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" grade "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("97")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> { :bob => 92, :chris => 95 }")]),s._v("\n\ngrades"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("select "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":alice")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> { :alice => 100 }")]),s._v("\n")])])]),a("p",[s._v("키나 값들만을 개별적으로 접근하는 방법도 존재한다")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("my_hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" three"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nmy_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("each_key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" print k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> one two three")]),s._v("\n\nmy_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("each_value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" print v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ==> 1 2 3")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);